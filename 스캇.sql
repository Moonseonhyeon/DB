@C:\TEST_DATA.SQL;

@C:\TEST_DATA.SQL;
--describe(설명)주석
DESC emp;

SELECT EMPNO, ename, SAL
FROM emp;

SELECT * 
FROM EMP;

SELECT EMPNO, ENAME,JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
FROM EMP;

SELECT *
FROM EMP
WHERE SAL = 1250;

SELECT *
FROM EMP
WHERE SAL = 1250 OR COMM >1000;

--ENAME이 WARD인 사람을 검색하시오. (*)
SELECT *
FROM EMP 
WHERE ENAME = 'WARD';
--JOB이 SALESMAN인 사람을 검색하시오. (*)
SELECT *
FROM EMP 
WHERE JOB = 'SALESMAN';
--JOB이 SALESMAN이고 DEPTNO가 30인 사람을 검색하세요. (*)
SELECT *
FROM EMP 
WHERE JOB = 'SALESMAN' AND DEPTNO = 30;

--총무과 : 우리 회사에 JOB이 머가있는지 보고싶어!!
SELECT DISTINCT JOB --중복 없애줌
FROM EMP;

--총무과에서 우리회사에 부서번호가 머가 있는지 보고싶어!! DEPTNO
SELECT DISTINCT DEPTNO 부서번호 --별칭
FROM EMP;

DESC STUDENT;

--STUDENT TABLE에서 키가 170 이상인 사람
SELECT *
FROM STUDENT WHERE HEIGHT>=170; --( = , > , < , >= , <= )

--STUDENT 테이블에서 학년이 2학년 이거나 3학년인 학생
SELECT *
FROM STUDENT
WHERE GRADE = 2 OR GRADE = 3;
--아래 동일 결과 다른 방법
SELECT *
FROM STUDENT
WHERE GRADE IN (2,3);

--EMP 테이블에서 JOB이 세일즈맨이거나 매니져거나 클락이거나 한 사람을 찾아요
SELECT *
FROM EMP
WHERE JOB IN ('SALESMAN', 'MANAGER', 'CLERK');

--EMP 테이블에서 이름이 M으로 시작되는 사람을 찾으시오
SELECT SUBSTR ('CRIS', 1,2)
FROM DUAL; --가상 테이블
--이름이M으로 시작하는 사람
SELECT *
FROM EMP
WHERE SUBSTR(ENAME,1,1)= 'M';

SELECT ENAME, SAL || '$'  --||는 결합연산자
FROM EMP;

DESC STUDENT;
--STUDENT 76년생 찾기
SELECT *
FROM STUDENT
WHERE SUBSTR(JUMIN,1,2)=76;

--STUDENT 부산 사는 사람 찾기
SELECT *
FROM STUDENT
WHERE SUBSTR(TEL,1,3)='051';

--2월에 태어난 사람을 찾으시오
SELECT *
FROM STUDENT
WHERE SUBSTR(BIRTHDAY, 4,2)='02';

--잘못된 
SELECT SUBSTR(TEL, INSTR(TEL,')')+1,INSTR(TEL,'-')- INSTR(TEL,')')-1), TEL, INSTR(TEL,')')+1
FROM STUDENT;

--문자열을 찾아서 숫자를 리턴 - 전화번호(문자열)에서 국번의 길이 리턴하기
SELECT INSTR(TEL,'-')- INSTR(TEL,')')-1, TEL
FROM STUDENT;

SELECT NAME, SUBSTR(BIRTHDAY,4,5)
FROM STUDENT
WHERE PROFNO=1001;

SELECT NAME, INSTR(TEL, ')')
FROM STUDENT
WHERE DEPTNO1=201;

SELECT NAME, TEL, INSTR(TEL,3)
FROM STUDENT
WHERE DEPTNO1=101;

SELECT NAME, TEL, SUBSTR(TEL, 1, INSTR(TEL, ')')-1) "지역 코드"
FROM STUDENT
WHERE DEPTNO1=201;

SELECT REPLACE('ABC', 'AB', 'F')
FROM DUAL;

SELECT RPAD(SUBSTR(JUMIN,1,7), 13,'*')
FROM STUDENT;

SELECT REPLACE(JUMIN,SUBSTR(JUMIN, 8), '******')
FROM STUDENT;

SELECT REPLACE(
TEL, 
SUBSTR(TEL, 1,INSTR(TEL, ')')-1),
SUBSTR('***', 1, INSTR(TEL, ')')-1)
)
FROM STUDENT;

SELECT REPLACE(JUMIN, SUBSTR(JUMIN,1,7), '******')
FROM STUDENT;
--84PAGE
select ename, replace(ename, substr(ename, 3,2), '--')
from emp
where deptno = 20;

SELECT NAME, REPLACE(JUMIN, SUBSTR(JUMIN, 7), '-------')
FROM student
where DEPTNO1 = 101;
--85PAGE
SELECT name, REPLACE(TEL, 
SUBSTR(TEL, INSTR(TEL,')')+1, 3),
'***'
)
FROM STUDENT
WHERE DEPTNO1 = 102;

SELECT NAME, TEL, REPLACE(TEL, SUBSTR(TEL, INSTR(TEL, '-')+1,4), '****')
FROM STUDENT
WHERE DEPTNO1 = 101;

------------------------2020 03 25
SELECT HIREDATE
FROM EMP
WHERE HIREDATE = '80/12/17';

ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY/MM/DD';

SELECT *
FROM EMP;

SELECT *
FROM EMP
WHERE SAL>=1500 AND SAL<=2000;

SELECT *
FROM EMP
WHERE SAL BETWEEN 1500 AND 02000;

SELECT *
FROM EMP
WHERE ENAME LIKE 'A%';

SELECT *
FROM EMP
WHERE ENAME LIKE '%N%';

SELECT *
FROM EMP
WHERE COMM IS NOT NULL;

SELECT *
FROM EMP
WHERE COMM IS NULL;

--사원들 중에 보너스가 500보다 작은 사람!!
SELECT ENAME, SAL, NVL(COMM,0)
FROM EMP
WHERE NVL(COMM,0) < 500;

SELECT NVL(NULL,0), NVL(100,0)
FROM DUAL;

----------
SELECT *
FROM EMP
WHERE SAL>1000
ORDER BY SAL ASC;

SELECT *
FROM EMP
WHERE SAL>1000
ORDER BY SAL DESC;
-----------------------
SELECT POWER(2,64)
FROM DUAL;

SELECT MOD (121,10), CEIL(123.45), FLOOR(123.45)
FROM DUAL;

SELECT TRUNC(987.654,2)
FROM DUAL;
-------------
SELECT SYSDATE
FROM DUAL;
----------
SELECT DECODE ('LOVE', 'LOV', '참', '거짓')
FROM DUAL;
------------책 예제114P
SELECT * FROM PROFESSOR;

SELECT DEPTNO, NAME, DECODE(DEPTNO, 101, 'COMPUTER ENGINEERING',' ')
FROM PROFESSOR;
---115P
SELECT DEPTNO, NAME, DECODE(DEPTNO, 101, 'COMPUTER ENGINEERING', 'ETC') DNAME
FROM PROFESSOR;
---116P
SELECT DEPTNO, NAME, DECODE(DEPTNO, 101, 'COMPUTER ENGINEERING', 102,'MULTIMEDIA ENGINEERING', 103, 'SOFTWARE ENGINEERING', 'ETC') DNAME
FROM PROFESSOR;
---117P
SELECT NAME, DEPTNO, DECODE(DEPTNO, 101, DECODE(NAME, '조인형', 'BEST!'))
FROM PROFESSOR;
---118P
SELECT NAME, DEPTNO, DECODE(DEPTNO, 101, DECODE(NAME, '조인형', 'BEST!', 'GOOD!'), ' ') ETC
FROM PROFESSOR;
---119P
SELECT NAME, DEPTNO, DECODE(DEPTNO, 101, DECODE(NAME, '조인형', 'BEST!','GOOD!'), 'N/A') ETC
FROM PROFESSOR;

---120PAGE 퀴즈 할 차례
SELECT * FROM STUDENT;

SELECT NAME, JUMIN
FROM STUDENT
WHERE DEPTNO1 = 101;



-- ORDER BY 이중 사용
SELECT ENAME, SAL, COMM
FROM EMP
ORDER BY SAL DESC, COMM DESC;
-- 번호 넘버링하여 사용???
SELECT ENAME, SUBSTR(SAL,1,1)
FROM EMP
ORDER BY 2 DESC;
--블로그 문제
SELECT * FROM EMP;
--1
SELECT ENAME, EMPNO, SAL
FROM EMP
WHERE DEPTNO = 10;
--2
SELECT ENAME, HIREDATE, DEPTNO
FROM EMP
WHERE EMPNO = 7369;
--3
SELECT *
FROM EMP
WHERE ENAME = 'ALLEN';
--4
SELECT ENAME, DEPTNO, SAL 
FROM EMP
WHERE HIREDATE = '1980/12/17';
--5
SELECT *
FROM EMP
WHERE JOB != 'MANAGER';
--6
SELECT *
FROM EMP
WHERE hiredate > '1981/04/02';
--7
SELECT ENAME, SAL, DEPTNO
FROM EMP
WHERE SAL>800;
--8
SELECT *
FROM EMP
WHERE DEPTNO>=20;
--9
SELECT *
FROM EMP
WHERE hiredate < '1981/12/09';
--10
SELECT EMPNO, ENAME
FROM EMP
WHERE EMPNO<=7698;
--11
SELECT ENAME, SAL, DEPTNO
FROM EMP
WHERE '1981/04/02' < HIREDATE AND HIREDATE< '1982/12/09';
--12
SELECT ENAME, JOB, SAL
FROM EMP
WHERE 1600<SAL AND SAL<3000;
--13
SELECT *
FROM EMP
WHERE empno BETWEEN 7655 AND 7781;
--14
SELECT *
FROM EMP
WHERE ENAME BETWEEN 'C' AND 'I';
--15 할 차례
SELECT *
FROM EMP;
 
--오후 수업20200325
SELECT MAX(SAL)
FROM EMP;

--서브쿼리
SELECT *
FROM EMP
WHERE SAL = (SELECT MAX(SAL)
FROM EMP);

---GROUP BY
SELECT MAX(SAL), DEPTNO
FROM EMP
GROUP BY DEPTNO;

SELECT DISTINCT JOB
FROM EMP;

SELECT MAX(SAL), DEPTNO, ENAME
FROM EMP
GROUP BY DEPTNO, ENAME;

SELECT SUM(SAL)
FROM EMP;

SELECT SUM(SAL), DEPTNO
FROM EMP
GROUP BY DEPTNO
ORDER BY 1 DESC;

SELECT COUNT(JOB), JOB
FROM EMP
GROUP BY JOB;

SELECT FLOOR(AVG(SAL)), JOB
FROM EMP
WHERE JOB!='MANAGER'
GROUP BY JOB;

SELECT FLOOR(AVG(SAL))"평균연봉", JOB
FROM EMP
GROUP BY JOB
HAVING JOB != 'MANAGER';

SELECT DEPTNO, AVG(NVL(SAL,0))
FROM EMP
GROUP BY DEPTNO
HAVING AVG(NVL(SAL, 0))>2000;

SELECT * FROM GOGAK;

SELECT MAX(POINT)
FROM GOGAK;


---하드디스크나 메모리에서 FROM으로 퍼오릴 때 순서대로 번호 붙혀줌 
SELECT GNO, POINT, ROWNUM
FROM GOGAK
WHERE ROWNUM > 0 AND ROWNUM < 9;

SELECT MAX(POINT)
FROM GOGAK
WHERE ROWNUM > 0 AND ROWNUM < 9
UNION ALL
SELECT MAX(POINT)
FROM 
(SELECT GNO, POINT, ROWNUM"NO"
FROM GOGAK)
WHERE NO > 8 AND NO < 21;

SELECT GNO, POINT, ROWNUM"NO"
FROM GOGAK;
-----세로연산의 핵심은 그룹을 만드는 것->그룹을 만들기 위해서는 공통점이 있어야 해요
--------------1~8POINT합 9~21POINT 합
SELECT GNO, GNAME, POINT, NO 
FROM(
SELECT GNO, GNAME, POINT, ROWNUM "NO"
FROM GOGAK
);

SELECT MAX(POINT), "G"
FROM(
SELECT POINT, CASE WHEN NO<9 THEN 1 ELSE 2 END "G"
FROM(
SELECT GNO, GNAME, POINT, ROWNUM "NO" FROM GOGAK)
)
GROUP BY G;
---오늘은 20200326 어제꺼복습 
SELECT MAX(POINT), G
FROM
(
SELECT POINT, CASE WHEN ROWNUM < 9 THEN 1 ELSE 2 END "G"
FROM GOGAK
)
GROUP BY G;
-----
SELECT *
FROM CAL;

SELECT WEEK, MAX(NUM_DAY)
FROM CAL
GROUP BY WEEK
ORDER BY WEEK; --오름차순은 생략가능

----5명씩 끊어서 POINT의 합을 구하시오
SELECT SUM(POINT), CEIL(ROWNUM/5) "G"
FROM GOGAK
GROUP BY CEIL(ROWNUM/5);
----같은 나이의 POINT의 합을 구하시오

SELECT SUM(POINT), SUBSTR(JUMIN, 1,2) "G"
FROM GOGAK
GROUP BY SUBSTR(JUMIN, 1,2);

---월급 순위 구하기(서브쿼리) 중요!!!
SELECT ENAME, SAL, ROWNUM "순위"
FROM(
SELECT ENAME, SAL
FROM EMP
ORDER BY SAL DESC
);

----------복수행 함수 (여기서 DECODE보다 NAV사용하기)
SELECT ENAME, JOB, DEPTNO, TO_CHAR(S,'$9,999')
FROM(
SELECT ENAME, JOB, DEPTNO, SAL+(DECODE(COMM, NULL, 0, COMM)) "S"
FROM EMP
ORDER BY DEPTNO
)
WHERE DEPTNO = 10
UNION ALL
SELECT NULL "소계", NULL, NULL, TO_CHAR(SUM(SAL), '$9,999')
FROM EMP
WHERE DEPTNO =10
UNION ALL
SELECT ENAME, JOB, DEPTNO, TO_CHAR(S,'$99,999')
FROM
(
    SELECT ENAME, JOB, SAL+(DECODE(COMM, NULL, 0, COMM)) "S", DEPTNO
    FROM EMP
    ORDER BY DEPTNO
)
WHERE DEPTNO = 20
UNION ALL
SELECT '소계', NULL, NULL, TO_CHAR(SUM(SAL),'$99,999')
FROM EMP
WHERE DEPTNO = 20
UNION ALL
SELECT ENAME, JOB, DEPTNO, TO_CHAR(S,'$99,999')
FROM
(
    SELECT ENAME, JOB, SAL+(DECODE(COMM, NULL, 0, COMM)) "S", DEPTNO
    FROM EMP
    ORDER BY DEPTNO
)
WHERE DEPTNO = 30
UNION ALL
SELECT '소계', NULL, NULL, TO_CHAR(SUM(SAL),'$99,999')
FROM EMP
WHERE DEPTNO = 30
UNION ALL
SELECT '총계', NULL, NULL, TO_CHAR(SUM(SAL),'$99,999')
FROM EMP;
---RDBS
SELECT *
FROM DEPT;
----ROLLUP() 을 위한 UNION으로 
SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO;

SELECT DEPTNO, NULL JOB, ROUND(AVG(SAL),1) AVG_SAL, COUNT(*) CNT_EMP
FROM EMP
GROUP BY DEPTNO
UNION ALL
SELECT DEPTNO, JOB, ROUND(AVG(SAL),1) AVG_SAL, COUNT(*) CNT_EMP
FROM EMP
GROUP BY DEPTNO, JOB
UNION ALL
SELECT NULL DEPTNO, NULL JOB, ROUND(AVG(SAL),1) AVG_SAL, COUNT(*) CNT_EMP
FROM EMP
GROUP BY DEPTNO, JOB;
---ROLLUP()
SELECT DEPTNO, JOB, ROUND(AVG(SAL), 1) AVG_SAL, COUNT(*) CNT_EMP
FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB)
;
---ROLLUP() 문제
SELECT * FROM STUDENT;
--학생 테이블의 키(HEIGHT)의 평균을 구하시오
SELECT AVG(HEIGHT)
FROM STUDENT;
----학생 테이블에서 학과(DEPTNO1)별 학생들의 키의 평균을 구하시오.
SELECT AVG(HEIGHT), DEPTNO1
FROM STUDENT
GROUP BY DEPTNO1;
----학생 테이블에서 힉과별 학생들의 키의 평균과 소계 값을 구하시오.
SELECT DEPTNO1, GRADE, AVG(HEIGHT), COUNT(*)
FROM STUDENT
GROUP BY ROLLUP(DEPTNO1, GRADE);
---직업별 급여 합계 조회 마지막줄에 총합계 추가하여 표시.
SELECT JOB, SUM(SAL+NVL(COMM,0)) 
FROM EMP
GROUP BY ROLLUP (JOB);
---EMP에서 직업별 급여합계 조회 마지막줄에 총합계 추가해서 표시
SELECT JOB, SUM(SAL+NVL(COMM,0)) "급여"
FROM EMP
GROUP BY ROLLUP(JOB);

---PANMAE 테이블에서 날짜별(P_DATE) 상품이(P_CODE) 몇개(P_QTY)판매되었는지와 소계값을 구하시오.
SELECT P_DATE, P_CODE, SUM(P_QTY)
FROM PANMAE
GROUP BY ROLLUP(P_DATE, P_CODE);

---PANMAE 테이블에서 상품별(P_CODE)로 날짜마다(P_DATE) 얼마의 금액(P_TOTAL)이 판매되었는지와 소계값을 구하시오.
SELECT P_CODE, P_DATE, SUM(P_TOTAL)
FROM PANMAE
GROUP BY ROLLUP(P_CODE, P_DATE);

SELECT JOB, DEPTNO, SUM(SAL), COUNT(*)
FROM EMP
GROUP BY JOB, ROLLUP(DEPTNO);
-----
SELECT POSITION, SUM(PAY), COUNT(*)
FROM PROFESSOR
GROUP BY ROLLUP(POSITION);

SELECT GRADE, DEPTNO1, AVG(HEIGHT), COUNT(*)
FROM STUDENT
GROUP BY GRADE, ROLLUP(DEPTNO1);

-----학년별 몸무게의 평균
SELECT GRADE, AVG(WEIGHT)
FROM STUDENT
GROUP BY ROLLUP(GRADE);

------블로그 문제 15번 하는 중..
SELECT SUBSTR(HIREDATE, 3, 2);
------------------------
--PIVOT()187P
SELECT * FROM CAL;

SELECT WEEK,
MAX(DECODE(DAY, '일', NUM_DAY))"일", 
MAX(DECODE(DAY, '월', NUM_DAY))"월",
MAX(DECODE(DAY, '화', NUM_DAY))"화", 
MAX(DECODE(DAY, '수', NUM_DAY))"수", 
MAX(DECODE(DAY, '목', NUM_DAY))"목", 
MAX(DECODE(DAY, '금', NUM_DAY))"금", 
MAX(DECODE(DAY, '토', NUM_DAY))"토"
FROM CAL

GROUP BY WEEK
ORDER BY WEEK;

SELECT DEPTNO,
DECODE(JOB, 'CLERK', 0)"CLERK", 
DECODE(JOB, 'MANAGER', 0)"MANAGER",
DECODE(JOB, 'SALESMAN', 0)"SALESMAN",
DECODE(JOB, 'ANALYST', 0)"ANALYST",
DECODE(JOB, 'PRESIDENT', 0)"PRESIDENT",

FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO;

SELECT DEPTNO, JOB , COUNT(*)
FROM EMP
GROUP BY deptno, JOB
ORDER BY DEPTNO;

SELECT POSITION, PAY
FROM PROFESSOR;

SELECT PAY, POSITION FROM PROFESSOR;

SELECT
    AVG(DECODE(POSITION, '정교수', PAY)) "정교수",
    ROUND (AVG(DECODE(POSITION, '조교수', PAY)),0) "조교수",
    AVG(DECODE(POSITION, '전임강사', PAY)) "전임강사"
FROM PROFESSOR;

SELECT * FROM EMP2;

SELECT EMP_TYPE, DEPTNO, PAY
FROM EMP2
WHERE EMP_TYPE = '계약직';

SELECT EMP_TYPE,
MAX(DECODE (DEPTNO, 1008, PAY)) "0008",
MAX(DECODE (DEPTNO, 1009, PAY)) "1009",
MAX(DECODE (DEPTNO, 1010, PAY)) "1010",
MAX(DECODE (DEPTNO, 1011, PAY)) "1011"
FROM EMP2
WHERE EMP_TYPE = '계약직'
GROUP BY EMP_TYPE;

